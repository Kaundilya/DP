class Solution {
public:
    bool Partition(vector<int>& nums,int sum)
    {
        int n=nums.size();
        int arr[n+1][sum+1];
        memset(arr,0,sizeof(arr));
        for(int i=0;i<=n;i++)
        {
            arr[i][0]=1;
        }
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=sum;j++)
            {
                if(nums[i-1]<=j)
                    arr[i][j]=arr[i-1][j] || arr[i-1][j-nums[i-1]];
                else
                    arr[i][j]=arr[i-1][j];
            }
        }
        return arr[n][sum];
    }
    bool canPartition(vector<int>& nums) {
        int n=nums.size();
        int sum=0;
        for(int i=0;i<n;i++)
            sum+=nums[i];
        if(sum%2!=0)
            return false;
        else
            return Partition(nums,sum/2);
        
    }
    
   
};
